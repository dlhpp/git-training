
Introduction
    Who should attend this course
    What you will learn
    What you won't learn

Git:
    CVS, SVN
    Distributed (work offline)

Using Git with a GUI

Exercise #1: git diff EOL

Basic git commands
    clone
    pull
    add
    commit
    push
    checkout

Git commit: SHA-1 hash
    https://blog.thoughtram.io/git/2014/11/18/the-anatomy-of-a-git-commit.html

Github
    Free for public account
    Alternatives: Bitbucket

Branching workflow
    Feature or Bug Fix branch

Exercise #2: git visualization

Git Merge:
    Take changes from one branch and put them into a different branch

Exercise #3: build feature

DEMO: VS Code git commands
    Diff view
    Stage a file
    Revert a change

Stash
    What is it, why would I use it?
    Store changes
    Queue: pop vs. apply
    View my stored changes
    Get my stored changes

Exercise #4: git stash    

Rebase
    What is it, why would you use it?
        Flattens history
    Pull Requests -> race conditions
    >git rebase master
    Rebase vs. Merge

Exercise #5: Resolve merge conflict

Rewriting Git history
    What is it?
    Why would I want to do it?
    Interactive Rebase
        (squash, drop, )

DEMO: Interactive rebase
    Squash
    Drop

Exercise #6: interactive rebase

Git hooks overview
    Client Side vs. Server Side
    Client flow:
    Server flow:
    Use cases
    --no-verify

DEMO:
    commit-msg
    pre-commit    

Exercise #7: create your first git hook

CI/CD:
    Slack integration
    Jenkins integration
        Github plugin